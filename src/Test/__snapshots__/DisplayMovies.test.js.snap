// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DisplaySoloMovie should render correctly in "debug" mode 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DisplayMovies
    debug={true}
    results={
      Array [
        Object {
          "adult": false,
          "backdrop_path": "/h3KN24PrOheHVYs9ypuOIdFBEpX.jpg",
          "genre_ids": Array [
            16,
            10751,
            12,
          ],
          "id": 166428,
          "original_language": "en",
          "original_title": "How to Train Your Dragon: The Hidden World",
          "overview": "As Hiccup fulfills his dream of creating a peaceful dragon utopia, Toothless’ discovery of an untamed, elusive mate draws the Night Fury away. When danger mounts at home and Hiccup’s reign as village chief is tested, both dragon and rider must make impossible decisions to save their kind.",
          "popularity": 763.258,
          "poster_path": "/xvx4Yhf0DVH8G4LzNISpMfFBDy2.jpg",
          "release_date": "2019-01-03",
          "title": "How to Train Your Dragon: The Hidden World",
          "video": false,
          "vote_average": 7.7,
          "vote_count": 1185,
        },
        Object {
          "adult": false,
          "backdrop_path": "/w2PMyoyLU22YvrGK3smVM9fW1jj.jpg",
          "genre_ids": Array [
            28,
            12,
            878,
          ],
          "id": 299537,
          "original_language": "en",
          "original_title": "Captain Marvel",
          "overview": "The story follows Carol Danvers as she becomes one of the universe’s most powerful heroes when Earth is caught in the middle of a galactic war between two alien races. Set in the 1990s, Captain Marvel is an all-new adventure from a previously unseen period in the history of the Marvel Cinematic Universe.",
          "popularity": 408.793,
          "poster_path": "/AtsgWhDnHTq68L0lLsUrCnM7TjG.jpg",
          "release_date": "2019-03-06",
          "title": "Captain Marvel",
          "video": false,
          "vote_average": 7.2,
          "vote_count": 3119,
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "as": "div",
      "children": Array [
        <ForwardRef(render)>
          <ForwardRef
            as="div"
          >
            <div
              className="md-form mt-5 mb-5"
            >
              <input
                aria-label="Search"
                className="form-control"
                onChange={[Function]}
                placeholder="Search"
                type="text"
              />
            </div>
          </ForwardRef>
        </ForwardRef(render)>,
        <ForwardRef(render)>
          <ForwardRef
            as="div"
            className="resultContent"
          >
            <div
              className="spinner-border text-primary movie-loading"
              role="status"
            >
              <span
                className="sr-only"
              >
                Loading...
              </span>
            </div>
          </ForwardRef>
        </ForwardRef(render)>,
      ],
      "fluid": false,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <ForwardRef
            as="div"
          >
            <div
              className="md-form mt-5 mb-5"
            >
              <input
                aria-label="Search"
                className="form-control"
                onChange={[Function]}
                placeholder="Search"
                type="text"
              />
            </div>
          </ForwardRef>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "div",
            "children": <div
              className="md-form mt-5 mb-5"
            >
              <input
                aria-label="Search"
                className="form-control"
                onChange={[Function]}
                placeholder="Search"
                type="text"
              />
            </div>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <input
                aria-label="Search"
                className="form-control"
                onChange={[Function]}
                placeholder="Search"
                type="text"
              />,
              "className": "md-form mt-5 mb-5",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "aria-label": "Search",
                "className": "form-control",
                "onChange": [Function],
                "placeholder": "Search",
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            "type": "div",
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "as": "div",
            },
            "displayName": "Col",
            "render": [Function],
          },
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "displayName": "Bootstrap(Row)",
          "propTypes": undefined,
          "render": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <ForwardRef
            as="div"
            className="resultContent"
          >
            <div
              className="spinner-border text-primary movie-loading"
              role="status"
            >
              <span
                className="sr-only"
              >
                Loading...
              </span>
            </div>
          </ForwardRef>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "div",
            "children": <div
              className="spinner-border text-primary movie-loading"
              role="status"
            >
              <span
                className="sr-only"
              >
                Loading...
              </span>
            </div>,
            "className": "resultContent",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <span
                className="sr-only"
              >
                Loading...
              </span>,
              "className": "spinner-border text-primary movie-loading",
              "role": "status",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Loading...",
                "className": "sr-only",
              },
              "ref": null,
              "rendered": "Loading...",
              "type": "span",
            },
            "type": "div",
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "as": "div",
            },
            "displayName": "Col",
            "render": [Function],
          },
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "displayName": "Bootstrap(Row)",
          "propTypes": undefined,
          "render": [Function],
        },
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "defaultProps": Object {
        "as": "div",
        "fluid": false,
      },
      "displayName": "Container",
      "render": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "as": "div",
        "children": Array [
          <ForwardRef(render)>
            <ForwardRef
              as="div"
            >
              <div
                className="md-form mt-5 mb-5"
              >
                <input
                  aria-label="Search"
                  className="form-control"
                  onChange={[Function]}
                  placeholder="Search"
                  type="text"
                />
              </div>
            </ForwardRef>
          </ForwardRef(render)>,
          <ForwardRef(render)>
            <ForwardRef
              as="div"
              className="resultContent"
            >
              <div
                className="spinner-border text-primary movie-loading"
                role="status"
              >
                <span
                  className="sr-only"
                >
                  Loading...
                </span>
              </div>
            </ForwardRef>
          </ForwardRef(render)>,
        ],
        "fluid": false,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ForwardRef
              as="div"
            >
              <div
                className="md-form mt-5 mb-5"
              >
                <input
                  aria-label="Search"
                  className="form-control"
                  onChange={[Function]}
                  placeholder="Search"
                  type="text"
                />
              </div>
            </ForwardRef>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "div",
              "children": <div
                className="md-form mt-5 mb-5"
              >
                <input
                  aria-label="Search"
                  className="form-control"
                  onChange={[Function]}
                  placeholder="Search"
                  type="text"
                />
              </div>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  aria-label="Search"
                  className="form-control"
                  onChange={[Function]}
                  placeholder="Search"
                  type="text"
                />,
                "className": "md-form mt-5 mb-5",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "aria-label": "Search",
                  "className": "form-control",
                  "onChange": [Function],
                  "placeholder": "Search",
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "div",
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": Object {
                "as": "div",
              },
              "displayName": "Col",
              "render": [Function],
            },
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": undefined,
            "displayName": "Bootstrap(Row)",
            "propTypes": undefined,
            "render": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ForwardRef
              as="div"
              className="resultContent"
            >
              <div
                className="spinner-border text-primary movie-loading"
                role="status"
              >
                <span
                  className="sr-only"
                >
                  Loading...
                </span>
              </div>
            </ForwardRef>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "div",
              "children": <div
                className="spinner-border text-primary movie-loading"
                role="status"
              >
                <span
                  className="sr-only"
                >
                  Loading...
                </span>
              </div>,
              "className": "resultContent",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <span
                  className="sr-only"
                >
                  Loading...
                </span>,
                "className": "spinner-border text-primary movie-loading",
                "role": "status",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Loading...",
                  "className": "sr-only",
                },
                "ref": null,
                "rendered": "Loading...",
                "type": "span",
              },
              "type": "div",
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": Object {
                "as": "div",
              },
              "displayName": "Col",
              "render": [Function],
            },
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": undefined,
            "displayName": "Bootstrap(Row)",
            "propTypes": undefined,
            "render": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": Object {
          "as": "div",
          "fluid": false,
        },
        "displayName": "Container",
        "render": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`should render correctly with no props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DisplayMovies />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "as": "div",
      "children": Array [
        <ForwardRef(render)>
          <ForwardRef
            as="div"
          >
            <div
              className="md-form mt-5 mb-5"
            >
              <input
                aria-label="Search"
                className="form-control"
                onChange={[Function]}
                placeholder="Search"
                type="text"
              />
            </div>
          </ForwardRef>
        </ForwardRef(render)>,
        <ForwardRef(render)>
          <ForwardRef
            as="div"
            className="resultContent"
          >
            <div
              className="spinner-border text-primary movie-loading"
              role="status"
            >
              <span
                className="sr-only"
              >
                Loading...
              </span>
            </div>
          </ForwardRef>
        </ForwardRef(render)>,
      ],
      "fluid": false,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <ForwardRef
            as="div"
          >
            <div
              className="md-form mt-5 mb-5"
            >
              <input
                aria-label="Search"
                className="form-control"
                onChange={[Function]}
                placeholder="Search"
                type="text"
              />
            </div>
          </ForwardRef>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "div",
            "children": <div
              className="md-form mt-5 mb-5"
            >
              <input
                aria-label="Search"
                className="form-control"
                onChange={[Function]}
                placeholder="Search"
                type="text"
              />
            </div>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <input
                aria-label="Search"
                className="form-control"
                onChange={[Function]}
                placeholder="Search"
                type="text"
              />,
              "className": "md-form mt-5 mb-5",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "aria-label": "Search",
                "className": "form-control",
                "onChange": [Function],
                "placeholder": "Search",
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            "type": "div",
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "as": "div",
            },
            "displayName": "Col",
            "render": [Function],
          },
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "displayName": "Bootstrap(Row)",
          "propTypes": undefined,
          "render": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <ForwardRef
            as="div"
            className="resultContent"
          >
            <div
              className="spinner-border text-primary movie-loading"
              role="status"
            >
              <span
                className="sr-only"
              >
                Loading...
              </span>
            </div>
          </ForwardRef>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "div",
            "children": <div
              className="spinner-border text-primary movie-loading"
              role="status"
            >
              <span
                className="sr-only"
              >
                Loading...
              </span>
            </div>,
            "className": "resultContent",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <span
                className="sr-only"
              >
                Loading...
              </span>,
              "className": "spinner-border text-primary movie-loading",
              "role": "status",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Loading...",
                "className": "sr-only",
              },
              "ref": null,
              "rendered": "Loading...",
              "type": "span",
            },
            "type": "div",
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "as": "div",
            },
            "displayName": "Col",
            "render": [Function],
          },
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "displayName": "Bootstrap(Row)",
          "propTypes": undefined,
          "render": [Function],
        },
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "defaultProps": Object {
        "as": "div",
        "fluid": false,
      },
      "displayName": "Container",
      "render": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "as": "div",
        "children": Array [
          <ForwardRef(render)>
            <ForwardRef
              as="div"
            >
              <div
                className="md-form mt-5 mb-5"
              >
                <input
                  aria-label="Search"
                  className="form-control"
                  onChange={[Function]}
                  placeholder="Search"
                  type="text"
                />
              </div>
            </ForwardRef>
          </ForwardRef(render)>,
          <ForwardRef(render)>
            <ForwardRef
              as="div"
              className="resultContent"
            >
              <div
                className="spinner-border text-primary movie-loading"
                role="status"
              >
                <span
                  className="sr-only"
                >
                  Loading...
                </span>
              </div>
            </ForwardRef>
          </ForwardRef(render)>,
        ],
        "fluid": false,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ForwardRef
              as="div"
            >
              <div
                className="md-form mt-5 mb-5"
              >
                <input
                  aria-label="Search"
                  className="form-control"
                  onChange={[Function]}
                  placeholder="Search"
                  type="text"
                />
              </div>
            </ForwardRef>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "div",
              "children": <div
                className="md-form mt-5 mb-5"
              >
                <input
                  aria-label="Search"
                  className="form-control"
                  onChange={[Function]}
                  placeholder="Search"
                  type="text"
                />
              </div>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  aria-label="Search"
                  className="form-control"
                  onChange={[Function]}
                  placeholder="Search"
                  type="text"
                />,
                "className": "md-form mt-5 mb-5",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "aria-label": "Search",
                  "className": "form-control",
                  "onChange": [Function],
                  "placeholder": "Search",
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "div",
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": Object {
                "as": "div",
              },
              "displayName": "Col",
              "render": [Function],
            },
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": undefined,
            "displayName": "Bootstrap(Row)",
            "propTypes": undefined,
            "render": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ForwardRef
              as="div"
              className="resultContent"
            >
              <div
                className="spinner-border text-primary movie-loading"
                role="status"
              >
                <span
                  className="sr-only"
                >
                  Loading...
                </span>
              </div>
            </ForwardRef>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "div",
              "children": <div
                className="spinner-border text-primary movie-loading"
                role="status"
              >
                <span
                  className="sr-only"
                >
                  Loading...
                </span>
              </div>,
              "className": "resultContent",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <span
                  className="sr-only"
                >
                  Loading...
                </span>,
                "className": "spinner-border text-primary movie-loading",
                "role": "status",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Loading...",
                  "className": "sr-only",
                },
                "ref": null,
                "rendered": "Loading...",
                "type": "span",
              },
              "type": "div",
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": Object {
                "as": "div",
              },
              "displayName": "Col",
              "render": [Function],
            },
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": undefined,
            "displayName": "Bootstrap(Row)",
            "propTypes": undefined,
            "render": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": Object {
          "as": "div",
          "fluid": false,
        },
        "displayName": "Container",
        "render": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`should render correctly with props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DisplayMovies
    results={
      Array [
        Object {
          "adult": false,
          "backdrop_path": "/h3KN24PrOheHVYs9ypuOIdFBEpX.jpg",
          "genre_ids": Array [
            16,
            10751,
            12,
          ],
          "id": 166428,
          "original_language": "en",
          "original_title": "How to Train Your Dragon: The Hidden World",
          "overview": "As Hiccup fulfills his dream of creating a peaceful dragon utopia, Toothless’ discovery of an untamed, elusive mate draws the Night Fury away. When danger mounts at home and Hiccup’s reign as village chief is tested, both dragon and rider must make impossible decisions to save their kind.",
          "popularity": 763.258,
          "poster_path": "/xvx4Yhf0DVH8G4LzNISpMfFBDy2.jpg",
          "release_date": "2019-01-03",
          "title": "How to Train Your Dragon: The Hidden World",
          "video": false,
          "vote_average": 7.7,
          "vote_count": 1185,
        },
        Object {
          "adult": false,
          "backdrop_path": "/w2PMyoyLU22YvrGK3smVM9fW1jj.jpg",
          "genre_ids": Array [
            28,
            12,
            878,
          ],
          "id": 299537,
          "original_language": "en",
          "original_title": "Captain Marvel",
          "overview": "The story follows Carol Danvers as she becomes one of the universe’s most powerful heroes when Earth is caught in the middle of a galactic war between two alien races. Set in the 1990s, Captain Marvel is an all-new adventure from a previously unseen period in the history of the Marvel Cinematic Universe.",
          "popularity": 408.793,
          "poster_path": "/AtsgWhDnHTq68L0lLsUrCnM7TjG.jpg",
          "release_date": "2019-03-06",
          "title": "Captain Marvel",
          "video": false,
          "vote_average": 7.2,
          "vote_count": 3119,
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "as": "div",
      "children": Array [
        <ForwardRef(render)>
          <ForwardRef
            as="div"
          >
            <div
              className="md-form mt-5 mb-5"
            >
              <input
                aria-label="Search"
                className="form-control"
                onChange={[Function]}
                placeholder="Search"
                type="text"
              />
            </div>
          </ForwardRef>
        </ForwardRef(render)>,
        <ForwardRef(render)>
          <ForwardRef
            as="div"
            className="resultContent"
          >
            <div
              className="spinner-border text-primary movie-loading"
              role="status"
            >
              <span
                className="sr-only"
              >
                Loading...
              </span>
            </div>
          </ForwardRef>
        </ForwardRef(render)>,
      ],
      "fluid": false,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <ForwardRef
            as="div"
          >
            <div
              className="md-form mt-5 mb-5"
            >
              <input
                aria-label="Search"
                className="form-control"
                onChange={[Function]}
                placeholder="Search"
                type="text"
              />
            </div>
          </ForwardRef>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "div",
            "children": <div
              className="md-form mt-5 mb-5"
            >
              <input
                aria-label="Search"
                className="form-control"
                onChange={[Function]}
                placeholder="Search"
                type="text"
              />
            </div>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <input
                aria-label="Search"
                className="form-control"
                onChange={[Function]}
                placeholder="Search"
                type="text"
              />,
              "className": "md-form mt-5 mb-5",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "aria-label": "Search",
                "className": "form-control",
                "onChange": [Function],
                "placeholder": "Search",
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            "type": "div",
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "as": "div",
            },
            "displayName": "Col",
            "render": [Function],
          },
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "displayName": "Bootstrap(Row)",
          "propTypes": undefined,
          "render": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <ForwardRef
            as="div"
            className="resultContent"
          >
            <div
              className="spinner-border text-primary movie-loading"
              role="status"
            >
              <span
                className="sr-only"
              >
                Loading...
              </span>
            </div>
          </ForwardRef>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "div",
            "children": <div
              className="spinner-border text-primary movie-loading"
              role="status"
            >
              <span
                className="sr-only"
              >
                Loading...
              </span>
            </div>,
            "className": "resultContent",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <span
                className="sr-only"
              >
                Loading...
              </span>,
              "className": "spinner-border text-primary movie-loading",
              "role": "status",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Loading...",
                "className": "sr-only",
              },
              "ref": null,
              "rendered": "Loading...",
              "type": "span",
            },
            "type": "div",
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "as": "div",
            },
            "displayName": "Col",
            "render": [Function],
          },
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "displayName": "Bootstrap(Row)",
          "propTypes": undefined,
          "render": [Function],
        },
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "defaultProps": Object {
        "as": "div",
        "fluid": false,
      },
      "displayName": "Container",
      "render": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "as": "div",
        "children": Array [
          <ForwardRef(render)>
            <ForwardRef
              as="div"
            >
              <div
                className="md-form mt-5 mb-5"
              >
                <input
                  aria-label="Search"
                  className="form-control"
                  onChange={[Function]}
                  placeholder="Search"
                  type="text"
                />
              </div>
            </ForwardRef>
          </ForwardRef(render)>,
          <ForwardRef(render)>
            <ForwardRef
              as="div"
              className="resultContent"
            >
              <div
                className="spinner-border text-primary movie-loading"
                role="status"
              >
                <span
                  className="sr-only"
                >
                  Loading...
                </span>
              </div>
            </ForwardRef>
          </ForwardRef(render)>,
        ],
        "fluid": false,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ForwardRef
              as="div"
            >
              <div
                className="md-form mt-5 mb-5"
              >
                <input
                  aria-label="Search"
                  className="form-control"
                  onChange={[Function]}
                  placeholder="Search"
                  type="text"
                />
              </div>
            </ForwardRef>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "div",
              "children": <div
                className="md-form mt-5 mb-5"
              >
                <input
                  aria-label="Search"
                  className="form-control"
                  onChange={[Function]}
                  placeholder="Search"
                  type="text"
                />
              </div>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  aria-label="Search"
                  className="form-control"
                  onChange={[Function]}
                  placeholder="Search"
                  type="text"
                />,
                "className": "md-form mt-5 mb-5",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "aria-label": "Search",
                  "className": "form-control",
                  "onChange": [Function],
                  "placeholder": "Search",
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "div",
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": Object {
                "as": "div",
              },
              "displayName": "Col",
              "render": [Function],
            },
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": undefined,
            "displayName": "Bootstrap(Row)",
            "propTypes": undefined,
            "render": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ForwardRef
              as="div"
              className="resultContent"
            >
              <div
                className="spinner-border text-primary movie-loading"
                role="status"
              >
                <span
                  className="sr-only"
                >
                  Loading...
                </span>
              </div>
            </ForwardRef>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "div",
              "children": <div
                className="spinner-border text-primary movie-loading"
                role="status"
              >
                <span
                  className="sr-only"
                >
                  Loading...
                </span>
              </div>,
              "className": "resultContent",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <span
                  className="sr-only"
                >
                  Loading...
                </span>,
                "className": "spinner-border text-primary movie-loading",
                "role": "status",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Loading...",
                  "className": "sr-only",
                },
                "ref": null,
                "rendered": "Loading...",
                "type": "span",
              },
              "type": "div",
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": Object {
                "as": "div",
              },
              "displayName": "Col",
              "render": [Function],
            },
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": undefined,
            "displayName": "Bootstrap(Row)",
            "propTypes": undefined,
            "render": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": Object {
          "as": "div",
          "fluid": false,
        },
        "displayName": "Container",
        "render": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
